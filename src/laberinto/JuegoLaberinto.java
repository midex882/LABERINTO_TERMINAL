package laberinto;

import java.util.Random;
import java.util.Scanner;

public class JuegoLaberinto {

    public static void main(String[] args) {
        Scanner teclado = new Scanner(System.in);
        Random generador = new Random();
        
        final char bomba = 'õ';
        
        final char llave = '₽';
        
        final char random = '♣';
        
        final char arma = 'Ϯ';
        
        final char salida = '∩';
        
        final char enemigo = 'Ϫ';
        
        final char jugador = '©';
        
        
        //AQUÍ SE CONTROLA LA CANTIDAD DE CADA OBJETO PARA PODER USAR UN SOLO BUCLE PARA COLOCARLOS
        char[][] objetos = {{bomba,bomba,bomba,bomba,llave,salida,random,random,random,arma,enemigo,enemigo,enemigo,jugador},
                            {bomba,bomba,bomba,bomba,bomba,bomba,llave,salida,random,random,random,random,arma,arma,enemigo,enemigo,enemigo,jugador},
                            {bomba,bomba,bomba,bomba,bomba,bomba,bomba,bomba,bomba,bomba,llave,salida,random,random,random,random,random,arma,arma,enemigo,enemigo,enemigo,enemigo,enemigo,jugador}};


        char[] objetos_rand = {bomba,llave,arma};

        char direccion = ' ';
        
        boolean fin = false;
        
        boolean tiene_llave = false;
        
        //POSICION DEL JUGADOR
        int[] player_pos = new int[2];
        //OPCION QUE ELIGE PARA MOVERSE
        int opcion;
        //VARIABLES PARA LAS POSICIONES ALEATORIAS DE LOS OBJETOS A COLOCAR INICIALMENTE
        int ale_i, ale_j;
        boolean object_placed;
        
        int next_exit = 5;
        
        boolean key_taken = false;
        
        int random_box;
        
        int[] dir_i = {-1,0,1,0};
            
        int[] dir_j = {0,1,0,-1};
            
        int next_i,next_j;
            
        boolean[] movimientos = {false,false,false,false};
        
        int dificultad = 0;
        
        boolean endgame = false;
        
        String msg_saved = " ";
        
        int armas = 0;
        
        boolean victoria = false;
        
        
        char[][][] laberintos = {{{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ','#','#','#','#',' ',' ',' ','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ','#','#',' ','#','#','#','#',' ','#',' ',' ','#',' ',' ',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ','#','#','#','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ',' ','#',' ','#','#','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ','#',' ',' ','#'},
                              {'#',' ','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ','#',' ','#','#',' ','#','#',' ','#','#',' ','#','#','#',' ','#','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#',' ','#',' ','#',' ','#','#','#','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ','#','#','#','#','#','#','#','#',' ','#',' ','#','#',' ','#',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#','#','#','#','#','#'},
                              {'#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#','#','#',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ','#','#','#',' ',' ',' ','#',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#','#','#','#','#',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ','#','#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#',' ','#',' ','#','#','#','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#',' ',' ',' ','#','#','#',' ','#','#',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ','#','#','#','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ','#',' ',' ','#','#','#',' ','#','#','#','#',' ','#',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#',' ','#','#',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ','#',' ',' ',' ','#',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}},
        
                                {{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
                              {'#',' ',' ','#','#','#','#',' ',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#'},
                              {'#',' ',' ','#','#','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#',' ','#','#',' ','#','#',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}},
        
                               {{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
                              {'#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ','#','#','#','#',' ',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ','#','#','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
                              {'#',' ',' ',' ','#','#',' ','#','#',' ','#','#',' ','#','#','#',' ','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#','#',' ','#','#','#',' ','#',' ','#',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
                              {'#',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#','#','#','#','#','#','#','#',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
                              {'#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#'},
                              {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}}};
        
        String instrucciones = "USA W A S D  PARA MOVERTE. NO PUEDES ATRAVESAR PAREDES. \n LOS õ SON BOMBAS. SI LAS TOCAS, MUERES \n LAS ₽ SON LLAVES \n LOS ♣ GENERARAN UN OBJETO RANDOM EN CUALQUIER PARTE DEL MAPA \n LOS Ϯ SON ARMAS. USALAS PARA MATAR ENEMIGOS \n LOS Ϫ SON ENEMIGOS. SI NO TIENES UN ARMA, MORIRÁS \n ESTO ∩ ES LA SALIDA. PODRAS USARLA SI TIENES UNA LLAVE. SAL POR ELLA PARA GANAR \n  ESTE © ESRES TÚ";

        String no_llave = "No tienes la llave";
        String no_pasar = "No puedes pasar por ahí";
        String no_valido = "Movimiento no válido";
        String key_taken_msg = "Ahora tienes la llave";
        String enemy_killed = "Has matado un enemigo. Tienes: "+armas+" armas";
        String weapon_taken = "Has conseguido un arma";
        String death_final_msg = "                                                                                                                       \n" +
                                "                                             ,/***** /*************&#%%%&&#/.                                           \n" +
                                "                                     /**************.*/*****&%(                                                         \n" +
                                "                               *,,* *******//*((((((/(                                                                  \n" +
                                "                 *(##     *,******, *****%%&.                                                                           \n" +
                                "                  ((# *,**********..#(#                                                                                 \n" +
                                "                  /(********//*(((//                                                                                    \n" +
                                "               ,*.(*********/#(                                                                                         \n" +
                                "               **.**.******#%.                                                                                          \n" +
                                "                * *(*****##                                                                                             \n" +
                                "                *.***.**(/                                           ,###((%%%%(                                        \n" +
                                "                 ,**(*,#                                          #%%#(&@@@@@@(##%(                                     \n" +
                                "                 ,*(  ###                                      ###%#(@&&&%##%&@@&##%#                                   \n" +
                                "                  ,   (##,                                   %%####&%(*,...   .,/&&(#%%,                                \n" +
                                "                       ###                                  ###&#(&#&/,,.  ..,.. #(&@#%##,                              \n" +
                                "                       (##/                                ,#%&%(#@&%/@%@&(,(@%@#/%&&&(#%##/                            \n" +
                                "                        #((                              %####%((#&@%,*%(/&%/ .@%./@@@@#%%###%#(%#,                     \n" +
                                "                        ((((                           ##%#%#%%%(#&@@#( */&@@..,*.@@@&((#%&&&&&%#(#%,                   \n" +
                                "                      ,. .  ...@((*                 %(#%#%#%#(%#%(#@@@##&/ . ,,//@&@&((#%%#%(#%####%#                   \n" +
                                "                       /((,....@@(((%###(/**(##%#%#(#%##%%%%#%(%#(#(#@&(%&/ ,./ /&@@(%%%%%#%%#(%((#%#%%                 \n" +
                                "                      .%/,%&#,.@@@(#%%%##%%%%&%#%(#####%%%%%##%(#%%&%((@&(*,,*,@&. .,%% .%.#%#(((######/                \n" +
                                "                      (..,....@&&&(%(%%(##%#&#%#(%###%%%%%%%%&##@###(@%#(((((%#(. ,&,#  ,#(. ..&@##%%%%(                \n" +
                                "                           ###&&@&(###%%%%%&&&#%%%%%%%%%%%%%  #@%%&#%#@&###(##% ..%%  .,,*  ,(@&&&&@#%%(                \n" +
                                "                           %###@@&(#%#%%%%%&&%&%#%%%%%%%%%     %#&%%/%#%@&&@&& *#(#.& .,% (*,#*.,@@&@####               \n" +
                                "                            #(#%@&(%%%%%#%%%%&&%%%&%%%%         *##&@%%#(%(&&&% .,,% ## .@@@@/#, &&&((%%#/              \n" +
                                "                            *###@&##&#%%(%%%%%%%#%%%.             (#%#&@@@&## ,@,%#(#####&@&&#.#@@&@####%%              \n" +
                                "                             #(#&@#&%%%%(%%%%%%%(                   .####### .(#%#%%%%##%&&&@@@&&&@####%(#              \n" +
                                "                              (##%#&@#%%%#*                           @@%##% %###%#%#%###&@@&&&@&#%%#%%##%              \n" +
                                "                              ((#%#&&#((                              (&@@@&%#%#%#@&%###&@&@@&@#%%(%&####,              \n" +
                                "                               (##*(%%&                               %&%(%(%@&@@&&(&####&&###%#(#%%%&%%(               \n" +
                                "                               #(#%%%                                (#%#%%##%#@%###%%@#&%###%#%&%&(&&##                \n" +
                                "                                (## /                                %###&%%%%#&(##%(%#(@##%#(%&#&&#%##                 \n" +
                                "                                %(##                                (#&&&&#&%%(&@##%%%%#&#(%%##(##%#%&.                 \n" +
                                "                                 ###                                #%&%&%%##%#&@%%####&#%%%#%%&%%&(#(@                 \n" +
                                "                                 %###                               #(&##%#%#%#@&#%##%%&#(%(#(%%#%###@&%                \n" +
                                "                                  (##                              (#&&###%##%#&&&#####&%%###%#(##%###&&.               \n" +
                                "                                  ((##                             ##&&#%####%%&&@(##%%%###%(##%#%####&&@               \n" +
                                "                                   ((#,                            %%&&%#%###%#&&@&#%##%#%%#%##%#%%###@&&/              \n" +
                                "                                         _____   ______          _______  _    _                                        \n" +
                                "                                        |  __ \\ |  ____|    /\\ |__   __|| |  | |                                      \n" +
                                "                                        | |  | || |__      /  \\    | |   | |__| |                                      \n" +
                                "                                        | |  | ||  __|    / /\\ \\  | |   |  __  |                                      \n" +
                                "                                        | |__| || |____  / ____ \\  | |   | |  | |                                      \n" +
                                "                                        |_____/ |______|/_/    \\_\\|_|   |_|  |_|                                      \n" +
                                "                                                                                                                        \n" +
                                "                                                                                                                          ";
        
        String[] victory_numbers ={"         _        _                        __ \n" +
                                   "        (_)      | |                      /_ |\n" +
                                   " __   __ _   ___ | |_  ___   _ __  _   _   | |\n" +
                                   " \\ \\ / /| | / __|| __|/ _ \\ | '__|| | | |  | |\n" +
                                   "  \\ V / | || (__ | |_| (_) || |   | |_| |  | |\n" +
                                   "   \\_/  |_| \\___| \\__|\\___/ |_|    \\__, |  |_|\n" +
                                   "                                    __/ |     \n" +
                                   "                                   |___/      ",

                                   "         _        _                        ___  \n" +
                                   "        (_)      | |                      |__ \\ \n" +
                                   " __   __ _   ___ | |_  ___   _ __  _   _     ) |\n" +
                                   " \\ \\ / /| | / __|| __|/ _ \\ | '__|| | | |   / / \n" +
                                   "  \\ V / | || (__ | |_| (_) || |   | |_| |  / /_ \n" +
                                   "   \\_/  |_| \\___| \\__|\\___/ |_|    \\__, | |____|\n" +
                                   "                                    __/ |       \n" +
                                   "                                   |___/        ",
        
                                    "                                                                                                                      \n" +
                                    "                                                                                                                      \n" +
                                    "          @@@@@@                                                                                       @@@@.          \n" +
                                    "        @@@@@@#@@                                                                                    @@@@@@@@@        \n" +
                                    "       @@*@@@@@@@@                                                                                  @@@@@@@@@@@       \n" +
                                    "      @ @@@@@ @ @@@#     @ @                                                                 @ @     *@@@ @ @@@@% @   \n" +
                                    "      @@ @@ @&@  @@@@, @ @@@                                                                @@@@@   @@@@, @@@ @@ @@   \n" +
                                    "    @& @ @@& @@@@@@,@@@@@@@@@#__      __ _____  _____  _______  ____   _____ __     __     @@@@@@@@@@@@/@@@@,,@@ @ #@ \n" +
                                    "     @@@ @@@@@@@ @.@@@@@&  @  \\ \\    / /|_   _|/ ____||__   __|/ __ \\ |  __ \\\\ \\   / /  @@  &@@@@@@@  @@@&@@ @@@\n" +
                                    "   @@@@@ @@@@@@@@@@. @ @@.@   \\ \\  / /   | | | |        | |  | |  | || |__) |\\ \\_/ /    @@ @@@@@ @%@@@@@%@@.@@@@@ \n" +
                                    "   #@ @@/@@@@ @@@@@,@(@@@@@     \\ \\/ /    | | | |        | |  | |  | ||  _  /  \\   /     @@@@@.@ @ @ @/@ @@@@@@@@  \n" +
                                    "    @@@@@@@.@ @@*%@@#@@@         \\  /    _| |_| |____    | |  | |__| || | \\ \\   | |          ,@  @  @@@@#@@@@@#@   \n" +
                                    "     @@@@ @@@ @@@@  @             \\/    |_____|\\_____|   |_|   \\____/ |_|  \\_\\  |_|         %%@@ @@@@@@ @@ @*    \n" +
                                    "   ,@@ @@ @@  @@ @                                                                               @@ @ @ @  @@@@       \n" +
                                    "    @@.,@@ @@  @  @                                                                              ( @@( @ * @  @%      \n" +
                                    "    @ @@@@@,@@. @                                                                                  @ @* @@  @#@@      \n" +
                                    "    #@@@@ @@&@@                                                                                     @@@@@@&(@@ *      \n" +
                                    "     .@ @@*@@@@@                                                                                   @@@&@@,@ @@        \n" +
                                    "      @ %@@ @@ @@                                                                                  @@*@@@*@,.@&       \n" +
                                    "       @ @@@ @@   @                                                                              #@  @@ @@ &@@%       \n" +
                                    "      @@ @@@ @ @@                                                                                  @@ @@ @@ @@@       \n" +
                                    "     @@  @@@ @@@  @                                                                              (@ &@@ @@@  @@       \n" +
                                    "    @    @@@ @@@                                                                                    @@@ @@@   @%      \n" +
                                    "        @@@  @@@                                                                                    @@@  @@           \n" +
                                    "        @@   @@                                                                                      @@   @@          \n" +
                                    "       @     @                                                                                       %     @         \n" +
                                    "                                                                                                                       "};
        
        String next_lab =   "       _                _               _            \n" +
                            "      (_)              (_)             | |           \n" +
                            "  ___  _   __ _  _   _  _   ___  _ __  | |_  ___     \n" +
                            " / __|| | / _` || | | || | / _ \\| '_ \\ | __|/ _ \\    \n" +
                            " \\__ \\| || (_| || |_| || ||  __/| | | || |_|  __/    \n" +
                            " |___/|_| \\__, | \\__,_||_| \\___||_| |_| \\__|\\___|    \n" +
                            "           __/ |                                     \n" +
                            "  _       |___/                _         _           \n" +
                            " | |       | |                (_)       | |        _ \n" +
                            " | |  __ _ | |__    ___  _ __  _  _ __  | |_  ___ (_)\n" +
                            " | | / _` || '_ \\  / _ \\| '__|| || '_ \\ | __|/ _ \\   \n" +
                            " | || (_| || |_) ||  __/| |   | || | | || |_| (_) |_ \n" +
                            " |_| \\__,_||_.__/  \\___||_|   |_||_| |_| \\__|\\___/(_)";
 
    do{
        fin = false;
        key_taken = false;
        System.out.println(instrucciones);
        for (int i = 0; i < objetos[dificultad].length; i++) 
        {
            
            object_placed = false;
            while(!object_placed)
            {
                ale_i = generador.nextInt(laberintos[dificultad].length-2)+1;
                ale_j = generador.nextInt(laberintos[dificultad][0].length-2)+1;

                if(laberintos[dificultad][ale_i][ale_j] == ' ')
                {
                    if(objetos[dificultad][i] == jugador)
                    {
                        player_pos[0] = ale_i;
                        player_pos[1] = ale_j;
                    }
                    laberintos[dificultad][ale_i][ale_j] = objetos[dificultad][i];
                    object_placed = true;
                }
            }
        }

        //BUCLE DEL JUEGO
        do{ 
            System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
            if(dificultad == 0)
            {
                System.out.println(instrucciones);
            }
            System.out.println(msg_saved);
            msg_saved = " ";
            
            
            //DIBUJAMOS EL TABLERO
            
            for (int i = 0; i < laberintos[dificultad].length; i++) 
            {
                for (int j = 0; j < laberintos[dificultad][i].length; j++) 
                {
                
                System.out.print(laberintos[dificultad][i][j]);
            }
            System.out.println("");
        }
            
            //CALCULAR QUE MOVIMIENTOS PUEDE HACER EL JUGADOR
            
            for (int i = 0; i < movimientos.length; i++) 
            {
                next_i = player_pos[0] + dir_i[i];
                next_j = player_pos[1] + dir_j[i];
               
                if(laberintos[dificultad][next_i][next_j] == '#')
                {
                    movimientos[i] = false;
                }else if(laberintos[dificultad][next_i][next_j] == salida && !key_taken){
                    movimientos[i] = false;
                    next_exit = i;
                }else{
                    movimientos[i] = true;
                }
            }
            
            //ELEGIR MOVIMIENTO POSIBLE
            do{
                direccion = teclado.next().charAt(0);
                switch (direccion)
                {
                    case 'w':
                        if(movimientos[0])
                        {
                           laberintos[dificultad][player_pos[0]][player_pos[1]] = ' ';
                           player_pos[0] -=1; 
                        }else if(next_exit == 0){
                            msg_saved = no_llave;
                        }else{
                            msg_saved = no_pasar;
                        }
                        break;

                    case 'd':
                        if(movimientos[1])
                        {
                            laberintos[dificultad][player_pos[0]][player_pos[1]] = ' ';
                            player_pos[1] +=1;
                        }else if(next_exit == 1){
                            msg_saved = no_llave;
                        }else{
                            msg_saved = no_pasar;
                        }
                        break;

                    case 's':
                        if(movimientos[2])
                        {
                         laberintos[dificultad][player_pos[0]][player_pos[1]] = ' ';
                         player_pos[0] +=1;   
                        }else if(next_exit == 2){
                            msg_saved = no_llave;
                        }else{
                            msg_saved = no_pasar;
                        }
                        break;

                    case 'a':
                        if(movimientos[3])
                        {
                            laberintos[dificultad][player_pos[0]][player_pos[1]] = ' ';
                            player_pos[1] -=1;
                        }else if(next_exit == 3){
                            msg_saved = no_llave;
                        }else{
                            msg_saved = no_pasar;
                        }
                        break;
                        
                    default:
                        msg_saved = no_valido;
                        System.out.println(no_valido);
                        break;

                }
            }while(direccion != 'w' && direccion != 'a' && direccion != 's' && direccion != 'd');

            //SI ES NECESARIO VACIAR LA POSICION ACTUAL Y ACTUALIZAR LA POSICION
            //EN FUNCION DEL CONTENIDO DE LA NUEVA POSICION 

            if(laberintos[dificultad][player_pos[0]][player_pos[1]] == bomba)
            {
                laberintos[dificultad][player_pos[0]][player_pos[1]] = 'x';
                System.out.println(death_final_msg);
                fin =true;
                endgame = true;
                victoria = false;
            }else if(laberintos[dificultad][player_pos[0]][player_pos[1]] == llave)
            {
                key_taken = true;
                laberintos[dificultad][player_pos[0]][player_pos[1]] = jugador;
                msg_saved = key_taken_msg;
            }else if(laberintos[dificultad][player_pos[0]][player_pos[1]] == salida && key_taken)
            {
                System.out.println(victory_numbers[dificultad]);
                dificultad++;
                fin = true;
                if(dificultad == laberintos.length)
                {
                    endgame = true;
                }else{
                    msg_saved = next_lab;
                }
                
            }else if(laberintos[dificultad][player_pos[0]][player_pos[1]] == arma)
            {
                armas++;
                msg_saved = weapon_taken;
                laberintos[dificultad][player_pos[0]][player_pos[1]] = jugador;
                
            }else if(laberintos[dificultad][player_pos[0]][player_pos[1]] == enemigo)
            {
                if(armas >= 1)
                {
                    laberintos[dificultad][player_pos[0]][player_pos[1]] = jugador;
                    msg_saved = enemy_killed;
                    armas--;
                }else{
                    laberintos[dificultad][player_pos[0]][player_pos[1]] = 'x';
                    System.out.println(death_final_msg);
                    fin =true;
                    endgame = true;
                    victoria = false;
                }
                
            }else if(laberintos[dificultad][player_pos[0]][player_pos[1]] == random)
            {
                random_box = generador.nextInt(objetos_rand.length);
                
                
                object_placed = false;
                while(!object_placed)
                {
                    ale_i = generador.nextInt(laberintos[dificultad].length-2)+1;
                    ale_j = generador.nextInt(laberintos[dificultad][0].length-2)+1;

                    if(laberintos[dificultad][ale_i][ale_j] == ' ')
                    {
                        laberintos[dificultad][ale_i][ale_j] = objetos_rand[random_box];
                        object_placed = true;
                    }
                }
                laberintos[dificultad][player_pos[0]][player_pos[1]] = jugador;
            }else{
                laberintos[dificultad][player_pos[0]][player_pos[1]] = jugador;
            }
                //TOCA LA LLAVE--> CAMBIAR EL ESTADO DE LA LLAVE Y LA LLAVE NO APARECE
                //TOCA LA SALIDA---> SI TIENE LLAVE SE ACABA EL JUEGO Y MENSAJE OK Y DESAPARECE EL JUGADOR
            
        } while (!fin);
         
        //MOSTRAR COMO QUEDA EL LABERINTO AL TERMINAR EL JUEGO
     
    }while(!endgame);
    
    if(dificultad == 0)
    {
        dificultad = 1;
    }
    for (int i = 0; i < laberintos[dificultad-1].length; i++) 
    {
        for (int j = 0; j < laberintos[dificultad-1][i].length; j++) {
                
                System.out.print(laberintos[dificultad-1][i][j]);
            }
            System.out.println("");
    }
   
      
   }

}
